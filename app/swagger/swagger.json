{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Social Media Backend",
    "description": "Basic Structure for Social Media Backend Project",
    "contact": {
      "name": "Niraj Kumar Verma",
      "email": "nirajverma.75way@gmail.com"
    }
  },
  "host": "localhost:5000",
  "basePath": "/api/",
  "tags": [
    { "name": "User", "description": "User-related APIs" }
  ],
  "schemes": ["http"],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your Bearer Token in the format: Bearer <token>"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "Enter your Bearer Token in the format: Bearer <token>",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "John Doe" },
          "username": { "type": "string", "example": "john_doe" },
          "bio": { "type": "string", "example": "A brief bio" },
          "email": { "type": "string", "example": "john.doe@example.com" },
          "password": { "type": "string", "example": "securepassword123" }
        },
        "required": ["name", "username", "email", "password"]
      }
    }
  },
  "paths": {
    "/users": {
      "get": {
        "tags": ["User"],
        "summary": "Get all users",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["User"],
        "summary": "Create a new user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/User"
            },
            "example": {
              "name": "John Doe",
              "username": "john_doe",
              "bio": "A brief bio",
              "email": "john.doe@example.com",
              "password": "securepassword123"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Get a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": ["User"],
        "summary": "Update a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/User"
            },
            "example": {
              "name": "John Doe Updated",
              "username": "john_doe_updated",
              "bio": "Updated bio",
              "email": "john.doe.updated@example.com",
              "password": "newsecurepassword123"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "patch": {
        "tags": ["User"],
        "summary": "Partial update of a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/User"
            },
            "example": {
              "bio": "Updated bio"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["User"],
        "summary": "User login",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": { "type": "string" },
                "password": { "type": "string" }
              },
              "required": ["email", "password"]
            },
            "example": {
              "email": "john.doe@example.com",
              "password": "securepassword123"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful, returns JWT token"
          },
          "400": {
            "description": "Invalid email or password"
          }
        }
      }
    },
    "/users/forget-password": {
      "post": {
        "tags": ["User"],
        "summary": "User Forget password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": { "type": "string" }
              },
              "required": ["email"]
            },
            "example": {
              "email": "john.doe@example.com"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Code send to your mail"
          },
          "400": {
            "description": "Invalid email"
          }
        }
      }
    },
    "/users/reset-password": {
      "post": {
        "tags": ["User"],
        "summary": "User Reset password",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "code": { "type": "string" },
                "password": {"type": "string"}
              },
              "required": ["code", "password"]
            },
            "example": {
              "code": "******",
              "password": "newsecurepassword123"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password Saved"
          },
          "400": {
            "description": "Invalid code or password"
          }
        }
      }
    },
    "/users/ref-token": {
      "get": {
        "tags": ["User"],
        "summary": "Refresh Token",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Token Refresh successful"
          },
          "400": {
            "description": "Token Not Available "
          }
        }
      }
    }
  }
}
